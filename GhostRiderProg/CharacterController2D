using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController2D : MonoBehaviour
{
    Animator animator;
    public Rigidbody2D rb;
    SpriteRenderer spriteRenderer;
    bool isGrounded;

    [SerializeField]
    Transform GroundCheck;

    [SerializeField]
    Transform GroundCheckL;

    [SerializeField]
    Transform GroundCheckR;

    [SerializeField]
    private float runSpeed = 20f;

    [SerializeField]
    private float jumpSpeed = 5f;

    bool isAttacking = false;

    // Start is called before the first frame update
    void Start()
    {
        animator = GetComponent<Animator>();
        rb = GetComponent<Rigidbody2D>();
        spriteRenderer = GetComponent<SpriteRenderer>();
    }
 
    void Update()
    {
        if(Input.GetButtonDown("Fire1") && !isAttacking)
        {
            isAttacking = true;
            animator.Play("GhostRider_Attack_Right");

            Invoke("ResetAttack", .9f);
        }
    }
    void ResetAttack()
    {
        isAttacking = false;
    }
    private void FixedUpdate()
    {
        if ((Physics2D.Linecast(transform.position, GroundCheck.position, 1 << LayerMask.NameToLayer("Ground"))) ||
             Physics2D.Linecast(transform.position, GroundCheckL.position, 1 << LayerMask.NameToLayer("Ground")) ||
              Physics2D.Linecast(transform.position, GroundCheckR.position, 1 << LayerMask.NameToLayer("Ground")))
        {
            isGrounded = true;
        }
        else
        {
            isGrounded = false;
            animator.Play("GhostRider_Jump(LtR)");
        }

        if (Input.GetKey("d") || Input.GetKey("right"))
        {
            rb.velocity = new Vector2(runSpeed, rb.velocity.y);

            if (isGrounded && !isAttacking)
             animator.Play("Ghost_Rider_Sprint(LtR)");
            spriteRenderer.flipX = false;
        }
        else if (Input.GetKey("a") || Input.GetKey("left"))
        {
            rb.velocity = new Vector2(-runSpeed, rb.velocity.y);

            if (isGrounded && !isAttacking)
             animator.Play("Ghost_Rider_Sprint(LtR)");
            spriteRenderer.flipX = true;
        }
        else if (isGrounded)
        { 
            if(!isAttacking)
            {
             animator.Play("GhostRider_Idle_Ani"); 
            } 
        rb.velocity = new Vector2(0, rb.velocity.y);     
        }

        if (Input.GetKey("space") && isGrounded)
        {
            animator.Play("GhostRider_Jump(LtR)");
            rb.velocity = new Vector2(rb.velocity.x, jumpSpeed);
        }
    }
}
