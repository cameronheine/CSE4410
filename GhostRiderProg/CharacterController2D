using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController2D : MonoBehaviour
{
    Animator animator;
    public Rigidbody2D rb;
    SpriteRenderer spriteRenderer;
    bool isGrounded;

    public float maxHp;
    float hp;
    float iframes;

    public HealthBar healthBar;

    [SerializeField]
    Transform GroundCheck;

    [SerializeField]
    Transform GroundCheckL;

    [SerializeField]
    Transform GroundCheckR;

    [SerializeField]
    private float runSpeed = 20f;

    [SerializeField]
    private float jumpSpeed = 5f;

    bool isAttacking = false;

    // Start is called before the first frame update
    void Start()
    {
        animator = GetComponent<Animator>();
        rb = GetComponent<Rigidbody2D>();
        spriteRenderer = GetComponent<SpriteRenderer>();
        hp = maxHp;
        healthBar.SetSize(maxHp);
    }
 
    void Update()
    {
        if (iframes > 0) iframes -= Time.deltaTime;
        if(Input.GetButtonDown("Fire1") && !isAttacking)
        {
            isAttacking = true;
            animator.Play("GhostRider_Attack_Right");
            StartCoroutine(DoAttack()); 
        }
    }

    IEnumerator DoAttack()
    {
        yield return new WaitForSeconds(.8f);
        isAttacking = false;
    }

    private void FixedUpdate()
    {
        if ((Physics2D.Linecast(transform.position, GroundCheck.position, 1 << LayerMask.NameToLayer("Ground"))) ||
             Physics2D.Linecast(transform.position, GroundCheckL.position, 1 << LayerMask.NameToLayer("Ground")) ||
              Physics2D.Linecast(transform.position, GroundCheckR.position, 1 << LayerMask.NameToLayer("Ground")))
        {
            isGrounded = true;
        }
        else
        {
            isGrounded = false;
            if(!isAttacking)
            {
              animator.Play("GhostRider_Jump(LtR)");
            } 
        }

        if (Input.GetKey("d") || Input.GetKey("right"))
        {
            rb.velocity = new Vector2(runSpeed, rb.velocity.y);

            if (isGrounded && !isAttacking)
             animator.Play("Ghost_Rider_Sprint(LtR)");
            spriteRenderer.flipX = false;
        }
        else if (Input.GetKey("a") || Input.GetKey("left"))
        {
            rb.velocity = new Vector2(-runSpeed, rb.velocity.y);

            if (isGrounded && !isAttacking)
             animator.Play("Ghost_Rider_Sprint(LtR)");
            spriteRenderer.flipX = true;
        }
        else if (isGrounded)
        { 
            if(!isAttacking)
            {
             animator.Play("GhostRider_Idle_Ani"); 
            } 
        rb.velocity = new Vector2(0, rb.velocity.y);     
        }

        if (Input.GetKey("space") && isGrounded)
        {
            animator.Play("GhostRider_Jump(LtR)");
            rb.velocity = new Vector2(rb.velocity.x, jumpSpeed);
        }
    }

    private void OnEnable()
    {
        hp = maxHp;
    }

    public void Damage(float aat)
    {
        if(iframes <= 0)
        {
          hp -= aat;
            healthBar.SetSize(hp);
          if (hp <= 0) Die();

            iframes = 0.3f;
        }
        
    }
    public void Die()
    {
        gameObject.SetActive(false);
    }
}
